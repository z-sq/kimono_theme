<?php

/**
 * @file
 * Theme and preprocess functions for forms.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function radix_theme_suggestions_form_alter(array &$suggestions, array &$variables) {
  $element = $variables['element'];

  if (isset($element['#form_id'])) {
    $suggestion = strtr($element['#form_id'], ['.' => '_', '-' => '_']);
    $suggestions[] = $variables['theme_hook_original'] . '__' . $suggestion;
  }

  if (isset($element['#id'])) {
    $suggestion = strtr($element['#id'], ['.' => '_', '-' => '_']);
    $suggestions[] = $variables['theme_hook_original'] . '__' . $suggestion;
  }

  // Check to see if the form is layout builder form.
  if (isset($element['#layout_builder_element_keys'])) {
    $suggestions[] = $variables['theme_hook_original'] . '__layout__builder';
  }
}

/**
 * Implements hook_preprocess_input().
 */
function radix_preprocess_input(&$variables) {
  $element = $variables['element'];

  // Add the element type to the theme.
  $variables['type'] = $element['#type'];

  // Ensure there is no collision with Bootstrap 5 default class names by
  // replacing ".form-text" with ".form-textfield".
  $attributes = &$variables['attributes'];

  if ($element['#type'] === 'textfield' && !empty($attributes['class'])) {
    $classIndex = array_search('form-text', $attributes['class']);
    $attributes['class'][$classIndex] = 'form-textfield';
  }
}

/**
 * Implements hook_preprocess_form_element().
 */
function radix_preprocess_form_element(&$variables) {
  $element = $variables['element'];

  // Add required class for checkbox and radio labels.
  if (in_array($element['#type'], ['checkbox', 'radio'])) {
    $variables['label']['#attributes']['class'][] = 'form-check-label';
  }
  else {
    $variables['label']['#attributes']['class'][] = 'form-label';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function radix_form_search_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Update the placeholder and size of field.
  $form['keys']['#title'] = '';
  $form['keys']['#size'] = 20;
  $form['keys']['#placeholder'] = t('Search');
}

/**
 * Implements hook_form_alter().
 */
function radix_form_alter(&$form, FormStateInterface $form_state) {
  if (isset($form['actions']['submit']) && (count($form['actions'])) <= 2) {
    $form['actions']['submit']['#attributes']['class'][] = 'btn';
  }

  if (isset($form['#attributes']['class'])) {
    $form['#attributes']['class'][] = 'needs-validation';
  }
}
