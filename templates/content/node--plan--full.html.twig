{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 *
 * @see template_preprocess_node()
 *
 */
#}
<link rel="stylesheet" href="https://kimono-fukumoto.com/assets/css/plan_single.min.css" />

<hgroup class="main_ttl">
    <h1 class="main_ttl_txt">Rental plan</h1>
    <p class="main_ttl_bg">
        <picture>
            <source media="(max-width: 767px)" srcset="https://kimono-fukumoto.com/assets/img/plan/mv_sp.jpg">
            <source media="(min-width: 768px)" srcset="https://kimono-fukumoto.com/assets/img/plan/mv_pc.jpg">
            <img src="https://kimono-fukumoto.com/assets/img/plan/mv_pc.jpg" alt="Rental plan" width="100%" height="352" loading="lazy" class="main_ttl_bg_img">
        </picture>
    </p>
</hgroup>

<section class="plan_detail contents_wrp">
    <h1 class="ttl01">{{ label }}</h1>

    <ul class="plan_detail_list">
        <li class="plan_detail_list_item">
            <h2 class="ttl03">{{ label }}</h2>

            <p class="plan_detail_list_item_season">
                <small>Reservation only, regular price 5,500 yen</small>
            </p>
            <div class="plan_detail_list_item_price" style="display:flex;align-items: flex-end;">
                {{ content.field_price }}
                <span>円（tax included）</span>
            </div>

            <div class="plan_detail_list_item_img">
                <div class="splide plan_detail_list_item_img_main">
                    <div class="splide__track">
                        <ul class="splide__list">
                          {% for key, item in content.field_media_image %}
                            {% if key matches '/^\\d+$/' %}
                              <li class="splide__slide"> {{ item }} </li>
                            {% endif %}
                          {% endfor %}
                        </ul>
                    </div>
                </div>
                <div class="splide plan_detail_list_item_img_thumb">
                    <div class="splide__track">
                        <ul class="splide__list">
                          {% for key, item in content.field_media_image %}
                            {% if key matches '/^\\d+$/' %}
                              <li class="splide__slide"> {{ item }} </li>
                            {% endif %}
                          {% endfor %}
                        </ul>
                    </div>
                </div>
            </div>

            <section class="plan_detail_list_item_set">
                <h3 class="plan_detail_list_item_ttl">set content</h3>
                <div class="plan_detail_list_item_set_desc">
                    {{ content.field_body }}
                </div>
            </section>
        </li>
    </ul>
</section>

<link rel="stylesheet" href="https://unpkg.com/@splidejs/splide@3.6.9/dist/css/splide.min.css">
<script src="https://unpkg.com/@splidejs/splide@3.6.9/dist/js/splide.min.js"></script>
<script>
  const main = new Splide('.plan_detail_list_item_img_main', {
    type: 'fade',
    rewind: true,
    pagination: false,
    arrows: false,
  });
  const thumbnails = new Splide('.plan_detail_list_item_img_thumb', {
    isNavigation: true,
    type: 'loop',
    rewind: true,
    pagination: false,
    arrows: false,
    focus: 'center',
    fixedWidth: 116,
    gap: 2,
    perMove: 1,
    flickPower: 100,
    breakpoints: {
      767: {
        fixedWidth: '33%',
        gap: '0.5%',
      },
    },
  });
  main.sync( thumbnails );
  main.mount();
  thumbnails.mount();
</script>

{{ content|without('field_media_image','field_price', 'field_body') }}
